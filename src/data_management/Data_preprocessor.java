package data_management;

public class Data_preprocessor {
    public static void main(String[] args) {
        System.out.println("Create two functions public boolean preprocess_and_import_products(List<String> asin, List<String> prod_link, List<String> name, List<double> prod_overall_rating, List<String> prod_brand, List<int> no_rating, List<int> no_reviews,List<double> prod_price) and public boolean preprocess_and_import_reviews(List<String> asin, List<int> review_id, List<String> review_title, List<String> review_text, List<int> review_star, List<String> user_profile_link). Create another two functions private static Map<Object, Object> preprocess_products(same arguments as preprocess_and_import_products, without List for each arguments) and private static Map<Object, Object> preprocess_reviews(same arguments as preprocess_and_import_, without List for each arguments). Then create private boolean add_product_to_database(List<Map<Object, Object>>) and private boolean add_review_to_database(List<Map<Object, Object>>). Then, preprocess_and_import_products will take column wise data, convert it to row wise data and for each row, it will call preprocess_products. The returned Map will be row data. The preprocess_and_import_products will save the returned data in List. After preprocessing of all rows is done, it calls add_product_to_database. That will call the function to add to database from DataHandler. Depending on it returns true or false, preprocess_and_import_products will return true or false. Same to be done for preprocess_and_import_review.");
    }
}
